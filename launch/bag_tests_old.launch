<?xml version="1.0"?>
<launch>
    <arg name="only_canopy" default="false"/>

    <group unless="$(arg only_canopy)">
        <include file="$(find pozyx_comm)/launch/sensors.launch">
            <arg name="receiver_port" value="/dev/ttyACM1"/>
            <arg name="sender_port" value="/dev/ttyACM2"/>
        </include>

        <!-- <remap from="initialpose" to="observer/initial_pose_$(env CAR_FRAME_ID)"/> -->
        <include file="$(find racecar)/launch/teleop.launch"/>

    </group>

    <include file="$(find multi_car_localization)/launch/lidar_odom.launch"/>

    <node pkg="tf" type="static_transform_publisher" name="base_link_imu" args="0 0 0 0 0 0 base_link base_imu_link 100"/>

    <node pkg="canopy_client" type="client_node.py" name="canopy_node"
        output="screen">
		<param name="name" value="$(env CAR_FRAME_ID)"/>
		<param name="description" value="Racecar. $(env CAR_FRAME_ID)" />
        <param name="use_local_time" value="true" />
        <rosparam subst_value="True">
            publishing:
                - /imu
                - /odom
                - /ranges
                - /vesc/sensors/core
                - /vesc/sensors/servo_position_command
                - /slam_out_pose
                - /map
                - /tf
                - /tf_static
            types:
                - sensor_msgs/Imu
                - nav_msgs/Odometry
                - multi_car_msgs/UWBRange
                - vesc_msgs/VescStateStamped
                - std_msgs/Float64
                - geometry_msgs/PoseStamped
                - nav_msgs/OccupancyGrid
                - tf2_msgs/TFMessage
                - tf2_msgs/TFMessage
            trusted:
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
                - "car[0-2] observer"
            global_frames:
                - "$(env CAR_FRAME_ID)"
                - earth
        </rosparam>
        <rosparam command="load"
            file="$(find multi_car_localization)/param/canopy.yaml"/>
	</node>
</launch>
