<?xml version="1.0"?>
<launch>

    <arg name="id_dict" default="$(find multi_car_localization)/param/ids.yaml"/>
    <arg name="connections" default="$(find multi_car_localization)/param/connections_three_cars.yaml"/>

    <rosparam command="load" file="$(arg id_dict)"/>
    <rosparam command="load" file="$(arg connections)"/>

    <arg name="car_frame_id" default="$(env CAR_FRAME_ID)" />
    <arg name="num_cars" default="3" />

    <include file="$(find multi_car_localization)/launch/particle_filter.launch">
        <arg name="car_frame_id" value="$(arg car_frame_id)" />
    </include>

    <include file="$(find multi_car_localization)/launch/measurements.launch">
        <arg name="car_frame_id" value="$(arg car_frame_id)" />
        <arg name="num_cars" value="$(arg num_cars)" />
    </include>

    <node pkg="multi_car_localization" type="consensus_test.py" name="consensus_test" output="screen">
        <param name="frame_id" value="$(arg car_frame_id)"/>
        <param name="num_cars" value="$(arg num_cars)" />
    </node>

    <node pkg="gps_common" type="utm_odometry_node" name="gps_to_utm" output="screen">
        <param name="frame_id" value="utm"/>
        <param name="child_frame_id" value="map"/>
    </node>

    <node pkg="multi_car_localization" type="fake_control.py" name="fake_control" output="screen">
        <param name="car_frame_id" value="$(arg car_frame_id)" />
    </node>

    <node pkg="tf" type="static_transform_publisher" name="map_to_$(arg car_frame_id)"
        args="0 0 0 0 0 0 map $(arg car_frame_id) 100" />

    <node pkg="tf" type="static_transform_publisher" name="map_to_gps"
        args="0 0 0 0 0 0 earth utm 100" />

    <node pkg="tf" type="static_transform_publisher" name="map_to_utm"
        args="327929.638478 4692092.20129 0 0 0 0 utm map 100" />

</launch>